{"version":3,"sources":["redux/utils/theme/actions.js","redux/utils/theme/types.js","create-theme.js","ui-components/button/index.js","ui-components/modals/confirm/index.js","ui-components/with-props-styles/index.js","ui-components/modals/response/index.js","ui-components/notification/index.js","ui-components/tag/index.js","ui-components/upload-zone/index.js","App.js","containers/app.js","serviceWorker.js","themes.js","redux/utils/theme/reducers.js","redux/utils/theme/index.js","redux/root-saga.js","redux/utils/theme/sagas.js","redux/root-reducer.js","redux/configure-store.js","index.js"],"names":["changeTheme","_ref","type","payload","createTheme","selectedTheme","createMuiTheme","withStyles","theme","root","height","minWidth","fontSize","text","size","button_medium","position","& svg","left","width","disabled","background","color","sizeSmall","minHeight","button_small","children","classes","other","Object","objectWithoutProperties","react_default","a","createElement","Button_default","assign","messageDefault","paper","spacing","unit","backgroundColor","palette","boxShadow","shadows","outline","padding","modal_title","primary","main","modal_body","modal_control","paddingTop","closeIcon","top","right","&:hover","cursor","React","memo","_ref$title","title","_ref$message","message","handleAgree","open","handleClose","Modal_default","aria-labelledby","aria-describedby","onClose","Grid_default","style","transform","maxWidth","container","alignItems","direction","className","item","justify","ui_components_button","onClick","variant","Close_default","withPropsStyles","component","forwardRef","props","ref","hoc","objectSpread","modal_icon","colors","orange","agreeButton","white","opacity","Warning_default","Check_default","getIconStyle","green","blue","red","notification","icon","display","justifyContent","paddingLeft","notification_message","closeButton","_ref$type","Icon","Info_default","getIcon","getChipStyle","black","tag","borderRadius","_ref$label","label","handleDelete","Chip_default","onDelete","deleteIcon","maxHeight","input","upload_zone","flex","marginRight","browse","handleAcceptedFile","onDrop","useCallback","acceptedFiles","_useDropzone","useDropzone","accept","getRootProps","getInputProps","isDragActive","App","actions","_useState","useState","_useState2","slicedToArray","openModalConfirm","setOpenModalConfirm","_useState3","_useState4","openModalErrorResponse","setOpenModalErrorResponse","_useState5","_useState6","openModalSuccessResponse","setOpenModalSuccessResponse","_useState7","_useState8","setResponseType","core_styles","purple","Add_default","borderColor","console","log","modals_confirm","response","connect","state","dispatch","bindActionCreators","Boolean","window","location","hostname","match","defaultStyleOptions","shape","typography","button","textTransform","useNextVariants","fontFamily","display1","fontWeight","lineHeight","display2","display3","display4","dark_purple","grey","dark_blue","login_input","login_label","navigation_active","store_detail_header","store_detail_sub_header","store_detail_body","information_body_highlight","information_header","information_body","letterSpacing","font","bold","margin","table_item_hover","gradient","combinedStyle","themes","contrastText","secondary","third","initState","reducer","arguments","length","undefined","action","rootSaga","allSagas","toConsumableArray","regenerator_default","wrap","_context","prev","next","all","map","saga","fork","stop","_marked","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4LAEaA,EAAc,SAAAC,GACvB,MAAO,CACHC,KCJoB,sBDKpBC,QAAS,CACLD,KAJ2BD,EAAVC,6HEAhBE,EAAc,SAACC,GAAD,OAAmBC,yBAAeD,8BC4C9CE,2BAzCA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,OAAQ,GACRC,SAAU,IACVC,SAAUJ,EAAMK,KAAKC,KAAKC,cAC1BC,SAAU,WACVC,QAAS,CACLD,SAAU,WACVE,KAAM,GACNC,MAAO,GACPT,OAAQ,KAGhBU,SAAU,CACNC,WAAY,qBACZC,MAAO,sBAEXC,UAAU,CACNC,UAAW,GACXb,SAAU,GACVC,SAAUJ,EAAMK,KAAKC,KAAKW,gBAqBnBlB,CAjBf,SAAAN,GAAgD,IAA7ByB,EAA6BzB,EAA7ByB,SAAUC,EAAmB1B,EAAnB0B,QAAYC,EAAOC,OAAAC,EAAA,EAAAD,CAAA5B,EAAA,wBAC5C,OAAO8B,EAAAC,EAAAC,cAACC,EAAAF,EAADH,OAAAM,OAAA,CACHR,QAAS,CACLlB,KAAMkB,EAAQlB,KACdW,SAAUO,EAAQP,SAClBG,UAAWI,EAAQJ,YAEnBK,GAEHF,uCCpBT,IA8BMU,EAAiB,yEAyCR7B,2BAvEA,SAAAC,GAAK,MAAK,CACrB6B,MAAO,CACHrB,SAAU,WACVG,MAA4B,GAArBX,EAAM8B,QAAQC,KACrBC,gBAAiBhC,EAAMiC,QAAQpB,WAAWgB,MAC1CK,UAAWlC,EAAMmC,QAAQ,GACzBC,QAAS,OACTC,QAAS,aAEbC,YAAa,CACTlC,SAAUJ,EAAMK,KAAKC,KAAKgC,YAC1BxB,MAAOd,EAAMiC,QAAQM,QAAQC,MAEjCC,WAAW,CACPrC,SAAUJ,EAAMK,KAAKC,KAAKmC,WAC1B3B,MAAOd,EAAMK,KAAKS,MAAM2B,YAE5BC,cAAe,CACXC,WAAY3C,EAAMqC,QAAQK,eAE9BE,UAAW,CACPpC,SAAU,WACVqC,IAAK,GACLC,MAAO,GACPC,UAAW,CACPC,OAAQ,cA8CLjD,CAAmBkD,IAAMC,KAvCxC,SAAAzD,GAAmH,IAAA0D,EAAA1D,EAA5F2D,aAA4F,IAAAD,EAApF,cAAoFA,EAAAE,EAAA5D,EAArE6D,eAAqE,IAAAD,EAA3DzB,EAA2DyB,EAA3CE,EAA2C9D,EAA3C8D,YAAcC,EAA6B/D,EAA7B+D,KAAMC,EAAuBhE,EAAvBgE,YAAatC,EAAU1B,EAAV0B,QACrG,OAAOI,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACHmC,kBAAgB,qBAChBC,mBAAiB,2BACjBJ,KAAMA,EACNK,QAASJ,GAETlC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAMuC,MAhDH,CACHlB,IAAG,MACHnC,KAAI,MACJsD,UAAS,wBACTC,SAAU,IACVjD,UAAW,KA2CmBc,QAAS,GAAIoC,WAAS,EAAEC,WAAY,SAAUC,UAAW,SACjFC,UAAWlD,EAAQU,OACrBN,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACK,QAAS,aAAcF,UAAWlD,EAAQmB,aAC1Dc,GAEL7B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACK,QAAS,aAAcF,UAAWlD,EAAQsB,YAC1Da,GAEL/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACpC,QAAS,EAAGyC,QAAS,SAAUF,UAAWlD,EAAQuB,eACnEnB,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAUlE,KAAM,QAASmE,QAAShB,EAAaiB,QAAS,YAAxD,WAEJnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAUlE,KAAM,QAASmE,QAASlB,EAAamB,QAAS,YAAa5D,MAAO,WAA5E,WAGRS,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM6C,UAAWlD,EAAQyB,WACrBrB,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAWiD,QAAShB,oDCpDrBmB,EAnBS,SAACb,GAErB,IAAMa,EAAkB,SAACC,GAErB,OAAOC,qBAAW,SAACC,EAAOC,GAEtB,IAEMC,EAAMlF,qBAFE,SAACC,GAAD,OAAW+D,EAAMgB,EAAO/E,IAE1BD,CAAkB8E,GAE9B,OAAOE,EAAM7D,SACTO,wBAAcwD,EAAD5D,OAAA6D,EAAA,EAAA7D,CAAA,GAAU0D,EAAV,CAAiBC,QAAMD,EAAM7D,UAC1CO,wBAAcwD,EAAD5D,OAAA6D,EAAA,EAAA7D,CAAA,GAAU0D,EAAV,CAAiBC,YAI1C,OAAOJ,GCCX,IAwCMhD,EAAiB,yEAsDRgD,QA9FA,SAACG,EAAO/E,GAAR,MAAmB,CAC9B6B,MAAO,CACHrB,SAAU,WACVG,MAA4B,GAArBX,EAAM8B,QAAQC,KACrBC,gBAAiBhC,EAAMiC,QAAQpB,WAAWgB,MAC1CK,UAAWlC,EAAMmC,QAAQ,GACzBC,QAAS,OACTC,QAAS,aAEb8C,WAAY,CACR1E,QAAS,CACLL,SAAU,GACVU,MAAsB,UAAfiE,EAAMrF,KAAmBM,EAAMoF,OAAOC,OAASrF,EAAMiC,QAAQM,QAAQC,OAGpFC,WAAY,CACRrC,SAAUJ,EAAMK,KAAKC,KAAKmC,WAC1B3B,MAAsB,UAAfiE,EAAMrF,KAAmBM,EAAMoF,OAAOC,OAASrF,EAAMK,KAAKS,MAAM2B,YAE3EC,cAAe,CACXC,WAAY3C,EAAMqC,QAAQK,eAE9BE,UAAW,CACPpC,SAAU,WACVqC,IAAK,GACLC,MAAO,GACPC,UAAW,CACPC,OAAQ,YAGhBsC,YAAa,CACTzE,WAA2B,UAAfkE,EAAMrF,KAAmBM,EAAMoF,OAAOC,OAASrF,EAAMiC,QAAQM,QAAQC,KACjF1B,MAAOd,EAAMoF,OAAOG,MACpBxC,UAAU,CACNyC,QAAS,GACT3E,WAA2B,UAAfkE,EAAMrF,KAAmBM,EAAMoF,OAAOC,OAASrF,EAAMiC,QAAQM,QAAQC,SA2D9EoC,CAAwB3B,IAAMC,KApD7C,SAAAzD,GAAyG,IAAjFC,EAAiFD,EAAjFC,KAAiF2D,EAAA5D,EAA3E6D,eAA2E,IAAAD,EAAjEzB,EAAiEyB,EAAjDE,EAAiD9D,EAAjD8D,YAAaC,EAAoC/D,EAApC+D,KAAMC,EAA8BhE,EAA9BgE,YAAatC,EAAiB1B,EAAjB0B,QACpF,OADqG1B,EAARO,MACtFuB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACHmC,kBAAgB,qBAChBC,mBAAiB,2BACjBJ,KAAMA,EACNK,QAASJ,GAETlC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAMuC,MA1DH,CACHlB,IAAG,MACHnC,KAAI,MACJsD,UAAS,wBACTC,SAAU,IACVjD,UAAW,KAqDmBc,QAAS,GAAIoC,WAAS,EAACC,WAAY,SAAUC,UAAW,SAChFC,UAAWlD,EAAQU,OACrBN,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACK,QAAS,SAAUF,UAAWlD,EAAQgE,YAC9C,UAARzF,EAAkB6B,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,MAAmBD,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,OAE1CD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACK,QAAS,SAAUF,UAAWlD,EAAQsB,YACtDa,GAEL/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACpC,QAAS,EAAGyC,QAAS,SAAUF,UAAWlD,EAAQuB,eACnEnB,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CACIlE,KAAM,QACNmE,QAAShB,EACTiB,QAAS,YAHb,WAQJnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CACIlE,KAAM,QACNmE,QAASlB,EACTmB,QAAS,YACTL,UAAWlD,EAAQmE,aAJvB,WAUR/D,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM6C,UAAWlD,EAAQyB,WACrBrB,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAWiD,QAAShB,2BCzFpC,SAASkC,EAAajG,EAAMM,GACxB,OAAQN,GACJ,IAAK,UACD,MAAO,CACHmB,WAAYb,EAAMiC,QAAQM,QAAQC,KAClC1B,MAAOd,EAAMoF,OAAOG,OAE5B,IAAK,UACD,MAAO,CACH1E,WAAYb,EAAMoF,OAAOQ,MACzB9E,MAAOd,EAAMoF,OAAOG,OAE5B,IAAK,OACD,MAAO,CACH1E,WAAYb,EAAMoF,OAAOS,KACzB/E,MAAOd,EAAMoF,OAAOG,OAE5B,IAAK,UACD,MAAO,CACH1E,WAAYb,EAAMoF,OAAOC,OACzBvE,MAAOd,EAAMoF,OAAOG,OAE5B,IAAK,SACD,MAAO,CACH1E,WAAYb,EAAMoF,OAAOU,IACzBhF,MAAOd,EAAMoF,OAAOG,OAE5B,QACI,MAAO,CACH1E,WAAYb,EAAMiC,QAAQM,QAAQC,KAClC1B,MAAOd,EAAMoF,OAAOG,QAwErBX,QAnEA,SAACG,EAAO/E,GAAR,MAAmB,CAC9BC,KAAM,CACFe,UAAW,GACXiD,SAAU,IACV/B,UAAWlC,EAAMkC,UAAU6D,aAC3BvF,SAAU,YAEdwF,KAAK3E,OAAA6D,EAAA,EAAA7D,CAAA,GACEsE,EAAaZ,EAAMrF,KAAMM,GAD5B,CAEAiG,QAAS,OACTC,eAAgB,SAChB/B,WAAY,SACZxD,MAAO,GACPT,OAAQ,KAEZoD,QAAS,CACL6C,YAAa,GACb/F,SAAUJ,EAAMK,KAAKC,KAAK8F,sBAE9BC,YAAa,CACT7F,SAAU,WACVsC,MAAO,GACPC,UAAW,CACPC,OAAQ,cA4CL4B,CAtBf,SAAAnF,GAAyE,IAAA6G,EAAA7G,EAAlDC,YAAkD,IAAA4G,EAA3C,UAA2CA,EAAhChD,EAAgC7D,EAAhC6D,QAASG,EAAuBhE,EAAvBgE,YAAatC,EAAU1B,EAAV0B,QACrDoF,EAlBV,SAAiB7G,GACb,OAAQA,GACJ,IAAK,UAEL,IAAK,UACD,OAAO6B,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,MACX,IAAK,OACD,OAAOD,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,MACX,IAAK,UAEL,IAAK,SACD,OAAOD,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,MACX,QACI,OAAOD,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,OAKFiF,CAAQ/G,GAErB,OAAO6B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM0C,WAAS,EAACC,WAAY,SAAUE,UAAWlD,EAAQlB,MAC5DsB,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACD,UAAWlD,EAAQ6E,MACzBO,GAELhF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACD,UAAWlD,EAAQmC,SACzBA,GAEL/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM6C,UAAWlD,EAAQkF,aACrB9E,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAWiD,QAAShB,yBC/FhC,SAASiD,EAAahH,EAAMM,GACxB,OAAQN,GACJ,IAAK,SACD,MAAO,CACHoB,MAAOd,EAAMoF,OAAOG,MACpB1E,WAAYb,EAAMiC,QAAQM,QAAQC,MAE1C,QACI,MAAO,CACH1B,MAAOd,EAAMoF,OAAOuB,QAoCrB/B,QA/BA,SAACG,EAAO/E,GAAR,MAAmB,CAC9BC,KAAKoB,OAAA6D,EAAA,EAAA7D,CAAA,CACDR,WAAYb,EAAMiC,QAAQpB,WAAWgB,MACrCK,UAAWlC,EAAMkC,UAAU0E,IAC3BC,aAAc,GACXH,EAAa3B,EAAMrF,KAAMM,GAJ5B,CAKAS,QAAS,CACLL,SAAU,GACVU,MAAsB,WAAfiE,EAAMrF,KACPM,EAAMoF,OAAOG,MACbvF,EAAMoF,OAAOuB,WAqBhB/B,CAhBf,SAAAnF,GAAwE,IAAAqH,EAAArH,EAA1DsH,aAA0D,IAAAD,EAAlD,QAAkDA,EAAxBE,GAAwBvH,EAAzCC,KAAyCD,EAAxBuH,cAAc7F,EAAU1B,EAAV0B,QAC1D,OAAOI,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CACHuF,MAAOA,EACPG,SAAUF,EACV3C,UAAWlD,EAAQlB,KACnBkH,WAAY5F,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,kBCuBLoD,QAxDA,SAACG,EAAO/E,GAAR,MAAkB,CAC7BC,KAAM,CACFmH,UAAW,GACXpG,UAAW,GACXiD,SAAU,IACVjB,OAAQ,WAEZqE,MAAO,CACHxG,WAAY,UACZC,MAAOd,EAAMK,KAAKS,MAAMwG,YACxBC,KAAM,EACNvG,UAAW,GACXiF,QAAS,OACT9B,WAAY,SACZgC,YAAa,GACbqB,YAAa,GACbX,aAAc,GAElBY,OAAO,KAsCI7C,CAjCf,SAAAnF,GAAmD,IAA9BiI,EAA8BjI,EAA9BiI,mBAAoBvG,EAAU1B,EAAV0B,QAC/BwG,EAASC,sBAAY,SAAAC,GACvBH,EAAmBG,IACpB,IAH4CC,EAKKC,YAAY,CAC5DJ,SACAK,OAAQ,0BAFLC,EALwCH,EAKxCG,aAAcC,EAL0BJ,EAK1BI,cAKrB,OAV+CJ,EAKXK,aAMhC5G,EAAAC,EAAAC,cAACqC,EAAAtC,EAADH,OAAAM,OAAA,CAAMuC,WAAS,EAACG,UAAWlD,EAAQlB,MAAUgI,IAA7C,CAA6D9D,WAAY,WACrE5C,EAAAC,EAAAC,cAAA,QAAWyG,KACX3G,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACD,UAAWlD,EAAQkG,OAA9B,iBAGA9F,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACD,UAAWlD,EAAQsG,QAC1BlG,EAAAC,EAAAC,cAAC+C,EAAD,CACI1D,MAAO,UACP4D,QAAS,YACTpE,KAAM,SAHV,cCoMD8H,MAjOf,SAAA3I,GAAuC,IAAzB4I,EAAyB5I,EAAzB4I,QAASxI,EAAgBJ,EAAhBI,cAAgByI,EAIaC,oBAAS,GAJtBC,EAAAnH,OAAAoH,EAAA,EAAApH,CAAAiH,EAAA,GAI5BI,EAJ4BF,EAAA,GAIVG,EAJUH,EAAA,GAAAI,EAWyBL,oBAAS,GAXlCM,EAAAxH,OAAAoH,EAAA,EAAApH,CAAAuH,EAAA,GAW5BE,EAX4BD,EAAA,GAWJE,EAXIF,EAAA,GAAAG,EAwB6BT,oBAAS,GAxBtCU,EAAA5H,OAAAoH,EAAA,EAAApH,CAAA2H,EAAA,GAwB5BE,EAxB4BD,EAAA,GAwBFE,EAxBEF,EAAA,GAAAG,EAyBKb,mBAAS,IAzBdc,EAAAhI,OAAAoH,EAAA,EAAApH,CAAA+H,EAAA,GAyBdE,GAzBcD,EAAA,GAAAA,EAAA,IAoC7BrJ,EAAQJ,EAAYC,GAG1B,OACI0B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM0C,WAAS,EAACG,UAAU,OACtB9C,EAAAC,EAAAC,cAAC8H,EAAA,iBAAD,CAAkBvJ,MAAOA,GACrBuB,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM0C,WAAS,EAACpC,QAAS,GAAIsC,UAAW,UACpC7C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACJ,WAAS,EAACpC,QAAS,GAC1BP,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQuC,MAAO,CAAClD,WAAY+E,IAAM,KAAM9E,MAAO,SACvC2D,QAAS,kBAAM4D,EAAQ7I,YAAY,CAACE,KAAM,YADlD,iBAGJ6B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQuC,MAAO,CAAClD,WAAY2I,IAAO,KAAM1I,MAAO,SACxC2D,QAAS,kBAAM4D,EAAQ7I,YAAY,CAACE,KAAM,aADlD,kBAGJ6B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQuC,MAAO,CAAClD,WAAYwE,IAAO,KAAMvE,MAAO,SACxC2D,QAAS,kBAAM4D,EAAQ7I,YAAY,CAACE,KAAM,aADlD,kBAGJ6B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQuC,MAAO,CAAClD,WAAYgF,IAAK,KAAM/E,MAAO,SACtC2D,QAAS,kBAAM4D,EAAQ7I,YAAY,CAACE,KAAM,WADlD,iBAIR6B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM0C,WAAS,EAACpC,QAAS,GAAIqC,WAAY,UACrC5C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAUE,QAAS,WAAY5D,MAAM,WAArC,aAIJS,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAU5D,UAAQ,EAACE,MAAO,UAAW4D,QAAS,YAA9C,sBAIJnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAU5D,UAAQ,EAACE,MAAO,UAAW4D,QAAS,aAA9C,cAIJnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAUE,QAAS,YAAa5D,MAAM,WAAtC,uBAIJS,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAU1D,MAAO,UAAW4D,QAAS,aACjCnD,EAAAC,EAAAC,cAACgI,EAAAjI,EAAD,MADJ,WAKJD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAUlE,KAAM,QAASQ,MAAO,UAAW4D,QAAS,aAApD,YAMZnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC+C,EAAD,CAAUC,QAhGF,kBAAMkE,GAAoB,IAgGU7H,MAAO,UAAW4D,QAAS,YAAvE,0BAGJnD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM0C,WAAS,EAACpC,QAAS,GACrBP,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CACIC,QAjGE,WAClC6E,EAAgB,SAChBP,GAA0B,IAgGMrE,QAAS,WACTX,MAAO,CACHjD,MAAOjB,EAAcuF,OAAOC,OAC5BqE,YAAa7J,EAAcuF,OAAOC,SAL1C,iCAWJ9D,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CACIC,QA/FI,WACpC6E,EAAgB,WAChBH,GAA4B,IA8FIzE,QAAS,WACT5D,MAAO,WAHX,sCAWhBS,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsE,EAAD,CACIrG,KAAM,UACN4D,QAAS,6DAGjB/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsE,EAAD,CACIrG,KAAM,UACN4D,QAAS,6DAGjB/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACsE,EAAD,CACIrG,KAAM,OACN4D,QAAS,6DAGjB/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsE,EAAD,CACIrG,KAAM,UACN4D,QAAS,6DAGjB/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACsE,EAAD,CACIrG,KAAM,SACN4D,QAAS,8DAKrB/B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,EAACxC,QAAS,GAAIoC,WAAS,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACmF,EAAD,CACIG,MAAO,aACPC,aAAc,WAAK2C,QAAQC,IAAI,cAGvCrI,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACmF,EAAD,CACIlH,KAAM,SACNqH,MAAO,aACPC,aAAc,WAAK2C,QAAQC,IAAI,cAGvCrI,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAACmF,EAAD,CACIG,MAAO,YACPC,aAAc,WAAK2C,QAAQC,IAAI,gBAM/CrI,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAM8C,MAAI,GACN/C,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAC6F,EAAD,CACII,mBAAoB,SAACG,GAAD,OAAkB8B,QAAQC,IAAI/B,OAI1DtG,EAAAC,EAAAC,cAACoI,EAAD,CACIrG,KAAMkF,EACNjF,YAtMa,kBAAMkF,GAAoB,IAuMvCvF,MAAO,4BAEX7B,EAAAC,EAAAC,cAACqI,EAAD,CACIxG,QAAS,sCACT5D,KAAM,QACN8D,KAAMsF,EACNrF,YAnMmB,WACnC6F,EAAgB,IAChBP,GAA0B,MAmMdxH,EAAAC,EAAAC,cAACqI,EAAD,CACIxG,QAAS,aACT5D,KAAM,UACN8D,KAAM0F,EACNzF,YA3LqB,WACrC6F,EAAgB,IAChBH,GAA4B,UC/BrBY,eAdS,SAAAC,GACpB,MAAO,CACHnK,cAAemK,EAAMhK,MAAMH,gBAIR,SAAAoK,GACvB,MAAO,CACH5B,QAAS6B,6BAAmB,CACxB1K,YAAa6I,GACd4B,KAIIF,CAA6C3B,GCPxC+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gHClBAC,GAAsB,CACxBC,MAAO,CACH5D,aAAc,GAElB6D,WAAY,CACRC,OAAQ,CACJC,cAAe,UAEnBC,iBAAiB,EACjBC,WAAY,6CACZC,SAAS,CACL3K,SAAU,GACV4K,WAAY,OACZlK,MAAO,UACPmK,WAAY,UAEhBC,SAAS,CACL9K,SAAU,GACV4K,WAAY,OACZlK,MAAO,UACPmK,WAAY,UAEhBE,SAAS,CACL/K,SAAU,GACV4K,WAAY,OACZlK,MAAO,UACPmK,WAAY,UAEhBG,SAAS,CACLhL,SAAU,GACV4K,WAAY,OACZlK,MAAO,UACPmK,WAAY,WAGpB7F,OAAQ,CACJiG,YAAa,UACbhG,OAAQ,UACRO,MAAO,UACPe,MAAO,UACPpB,MAAO,UACPO,IAAK,UACLwF,KAAM,UACNC,UAAW,UACX1F,KAAM,WAEVxF,KAAM,CACFC,KAAM,CACFC,cAAe,GACfU,aAAc,GAEdqB,YAAa,GACbG,WAAY,GAEZ2D,qBAAsB,GAEtBkB,YAAa,GAGbkE,YAAa,GACbC,YAAa,GAEbC,kBAAmB,GAEnBC,oBAAqB,GACrBC,wBAAyB,GACzBC,kBAAmB,GAEnBC,2BAA4B,GAC5BC,mBAAoB,GACpBC,iBAAkB,IAGtBlL,MAAO,CACH2B,WAAY,UACZiJ,kBAAmB,OACnBI,2BAA4B,UAC5BC,mBAAoB,UACpBC,iBAAkB,UAElB1E,YAAa,WAEjB2E,cAAe,GAGfC,KAAM,CACFC,KAAM,CACFrB,WAAY,oBAIxBsB,OAAQ,GAGRlK,UAAW,CACPmK,iBAAkB,6CAClBtG,aAAc,iCACda,IAAK,yCAET0F,SAAU,GAGVjK,QAAS,CACLK,cAAe,oBAIvB,SAAS6J,GAAcxI,GACnB,OAAO1C,OAAOM,OAAPN,OAAA6D,EAAA,EAAA7D,CAAA,GAAkBmJ,IAAlBnJ,OAAA6D,EAAA,EAAA7D,CAAA,GAA4C0C,IAGhD,IAAMyI,GAAS,CAClBhD,OAAQ+C,GAAc,CAClBtK,QAAS,CACLM,QAAS,CACLC,KAAM,UACNiK,aAAc,QAElBC,UAAW,CACPlK,KAAM,UACNiK,aAAc,QAElBE,MAAO,CACHnK,KAAM,UACNiK,aAAc,WAI1B7G,MAAO2G,GAAc,CACjBtK,QAAS,CACLM,QAAS,CACLC,KAAM,UACNiK,aAAc,QAElBC,UAAW,CACPlK,KAAM,UACNiK,aAAc,QAElBE,MAAO,CACHnK,KAAM,UACNiK,aAAc,WAI1BpH,OAAQkH,GAAc,CAClBtK,QAAS,CACLM,QAAS,CACLC,KAAM,UACNiK,aAAc,QAElBC,UAAW,CACPlK,KAAM,UACNiK,aAAc,QAElBE,MAAO,CACHnK,KAAM,UACNiK,aAAc,WAI1B5G,KAAM0G,GAAc,CAChBtK,QAAS,CACLM,QAAS,CACLC,KAAM,UACNiK,aAAc,QAElBC,UAAW,CACPlK,KAAM,UACNiK,aAAc,QAElBE,MAAO,CACHnK,KAAM,UACNiK,aAAc,YCzKxBG,GAAY,CACdJ,UACA3M,cAAe2M,GAAM,QCMVK,GDHA,WACgB,IAA3B7C,EAA2B8C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnBF,GAAWK,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3B,OAAQC,EAAOvN,MACX,IbXoB,sBaWK,IACdA,EAAQuN,EAAOtN,QAAfD,KACA8M,EAAUxC,EAAVwC,OACP,OAAOnL,OAAA6D,EAAA,EAAA7D,CAAA,GAAI2I,EAAX,CAAkBnK,cAAe2M,EAAO9M,KAG5C,QACI,OAAOsK,iBEVMkD,IALnBC,GAAQ9L,OAAA+L,GAAA,EAAA/L,CCCO,IDIN,SAAU6L,KAAV,OAAAG,GAAA7L,EAAA8L,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,OADcF,EAAAE,KAAA,EACRC,aAAIP,GAASQ,IAAI,SAACC,GAAD,OAAUC,aAAKD,MADxB,wBAAAL,EAAAO,SAAAC,IEHAC,iCAAgB,CAC3BhO,oBCCEiO,GAAiBC,eACjBC,GAAQC,sBACbvB,GACGwB,+BAAoBC,0BAAgBL,MAIxCA,GAAeM,IAAIrB,IAEJiB,UCTfK,IAASC,OACLlN,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CAAUP,MAAOA,IACb5M,EAAAC,EAAAC,cAACkN,GAAD,OAENC,SAASC,eAAe,SRsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.252cf224.chunk.js","sourcesContent":["import * as types from \"./types\";\r\n\r\nexport const changeTheme = ({type}) => {\r\n    return {\r\n        type: types.CHANGE_THEME,\r\n        payload: {\r\n            type\r\n        }\r\n    }\r\n};","export const CHANGE_THEME = \"[THEME]CHANGE_THEME\";\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const createTheme = (selectedTheme) => createMuiTheme(selectedTheme);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 40,\r\n        minWidth: 180,\r\n        fontSize: theme.text.size.button_medium,\r\n        position: \"relative\",\r\n        \"& svg\": {\r\n            position: \"absolute\",\r\n            left: 20,\r\n            width: 15,\r\n            height: 15\r\n        }\r\n    },\r\n    disabled: {\r\n        background: \"#dadada !important\",\r\n        color: \"#989898 !important\"\r\n    },\r\n    sizeSmall:{\r\n        minHeight: 30,\r\n        minWidth: 90,\r\n        fontSize: theme.text.size.button_small\r\n    }\r\n});\r\n\r\nfunction QWButton({children, classes, ...other}){\r\n    return <Button\r\n        classes={{\r\n            root: classes.root,\r\n            disabled: classes.disabled,\r\n            sizeSmall: classes.sizeSmall\r\n        }}\r\n        {...other}\r\n    >\r\n        {children}\r\n    </Button>\r\n}\r\n\r\nQWButton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(QWButton);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport QWButton from \"../../button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        maxWidth: 480,\r\n        minHeight: 250\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        outline: 'none',\r\n        padding: \"30px 40px\"\r\n    },\r\n    modal_title: {\r\n        fontSize: theme.text.size.modal_title,\r\n        color: theme.palette.primary.main,\r\n    },\r\n    modal_body:{\r\n        fontSize: theme.text.size.modal_body,\r\n        color: theme.text.color.modal_body\r\n    },\r\n    modal_control: {\r\n        paddingTop: theme.padding.modal_control\r\n    },\r\n    closeIcon: {\r\n        position: \"absolute\",\r\n        top: 10,\r\n        right: 10,\r\n        \"&:hover\": {\r\n            cursor: \"pointer\"\r\n        }\r\n    }\r\n});\r\n\r\nconst messageDefault = \"With supporting text below as a natural lead-in to additional content.\";\r\n\r\nfunction ModalConfirm({title = \"Modal Title\", message = messageDefault, handleAgree,  open, handleClose, classes}) {\r\n    return <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n    >\r\n        <Grid style={getModalStyle()} spacing={16} container  alignItems={\"center\"} direction={\"column\"}\r\n              className={classes.paper}>\r\n            <Grid item container justify={\"flex-start\"} className={classes.modal_title}>\r\n                {title}\r\n            </Grid>\r\n            <Grid item container justify={\"flex-start\"} className={classes.modal_body}>\r\n                {message}\r\n            </Grid>\r\n            <Grid item container spacing={8} justify={\"center\"} className={classes.modal_control}>\r\n                <Grid item>\r\n                    <QWButton size={\"small\"} onClick={handleClose} variant={\"outlined\"}>Cancel</QWButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <QWButton size={\"small\"} onClick={handleAgree} variant={\"contained\"} color={\"primary\"}>Agree</QWButton>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.closeIcon}>\r\n                <CloseIcon onClick={handleClose} />\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nModalConfirm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    handleClose: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string,\r\n    handleAgree: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(React.memo(ModalConfirm));\r\n","import {withStyles} from '@material-ui/core/styles';\r\nimport {createElement, forwardRef} from \"react\";\r\n\r\nconst withPropsStyles = (style) => {\r\n\r\n    const withPropsStyles = (component) => {\r\n\r\n        return forwardRef((props, ref) => {\r\n\r\n            const proxy = (theme) => style(props, theme)\r\n\r\n            const hoc = withStyles(proxy)(component)\r\n\r\n            return props.children ?\r\n                createElement(hoc, {...props, ref}, props.children) :\r\n                createElement(hoc, {...props, ref})\r\n        })\r\n    };\r\n\r\n    return withPropsStyles\r\n};\r\n\r\nexport default withPropsStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport QWButton from \"../../button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport withPropsStyles from \"../../with-props-styles\";\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        maxWidth: 480,\r\n        minHeight: 250\r\n    };\r\n}\r\n\r\nconst styles = (props, theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        outline: 'none',\r\n        padding: \"20px 30px\"\r\n    },\r\n    modal_icon: {\r\n        \"& svg\": {\r\n            fontSize: 70,\r\n            color: props.type === \"error\" ? theme.colors.orange : theme.palette.primary.main\r\n        }\r\n    },\r\n    modal_body: {\r\n        fontSize: theme.text.size.modal_body,\r\n        color: props.type === \"error\" ? theme.colors.orange : theme.text.color.modal_body\r\n    },\r\n    modal_control: {\r\n        paddingTop: theme.padding.modal_control\r\n    },\r\n    closeIcon: {\r\n        position: \"absolute\",\r\n        top: 10,\r\n        right: 10,\r\n        \"&:hover\": {\r\n            cursor: \"pointer\"\r\n        }\r\n    },\r\n    agreeButton: {\r\n        background: props.type === \"error\" ? theme.colors.orange : theme.palette.primary.main,\r\n        color: theme.colors.white,\r\n        \"&:hover\":{\r\n            opacity: 0.8,\r\n            background: props.type === \"error\" ? theme.colors.orange : theme.palette.primary.main,\r\n        }\r\n    }\r\n});\r\n\r\nconst messageDefault = \"With supporting text below as a natural lead-in to additional content.\";\r\n\r\nfunction ModalResponse({type, message = messageDefault, handleAgree, open, handleClose, classes, theme}) {\r\n    return <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n    >\r\n        <Grid style={getModalStyle()} spacing={16} container alignItems={\"center\"} direction={\"column\"}\r\n              className={classes.paper}>\r\n            <Grid item container justify={\"center\"} className={classes.modal_icon}>\r\n                {type ===\"error\" ? <WarningIcon /> :  <CheckIcon/>}\r\n            </Grid>\r\n            <Grid item container justify={\"center\"} className={classes.modal_body}>\r\n                {message}\r\n            </Grid>\r\n            <Grid item container spacing={8} justify={\"center\"} className={classes.modal_control}>\r\n                <Grid item>\r\n                    <QWButton\r\n                        size={\"small\"}\r\n                        onClick={handleClose}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        Cancel\r\n                    </QWButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <QWButton\r\n                        size={\"small\"}\r\n                        onClick={handleAgree}\r\n                        variant={\"contained\"}\r\n                        className={classes.agreeButton}\r\n                    >\r\n                        Agree\r\n                    </QWButton>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.closeIcon}>\r\n                <CloseIcon onClick={handleClose}/>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nModalResponse.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    handleClose: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    message: PropTypes.string,\r\n    handleAgree: PropTypes.func,\r\n    type: PropTypes.string,\r\n};\r\n\r\nexport default withPropsStyles(styles)(React.memo(ModalResponse));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withPropsStyles from \"../with-props-styles\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport AgreeIcon from \"@material-ui/icons/Check\"\r\n\r\n\r\nfunction getIconStyle(type, theme) {\r\n    switch (type) {\r\n        case \"primary\":\r\n            return {\r\n                background: theme.palette.primary.main,\r\n                color: theme.colors.white\r\n            };\r\n        case \"success\":\r\n            return {\r\n                background: theme.colors.green,\r\n                color: theme.colors.white\r\n            };\r\n        case \"info\":\r\n            return {\r\n                background: theme.colors.blue,\r\n                color: theme.colors.white\r\n            };\r\n        case \"warning\":\r\n            return {\r\n                background: theme.colors.orange,\r\n                color: theme.colors.white\r\n            };\r\n        case \"danger\":\r\n            return {\r\n                background: theme.colors.red,\r\n                color: theme.colors.white\r\n            };\r\n        default:\r\n            return {\r\n                background: theme.palette.primary.main,\r\n                color: theme.colors.white\r\n            };\r\n    }\r\n}\r\n\r\nconst styles = (props, theme) => ({\r\n    root: {\r\n        minHeight: 50,\r\n        maxWidth: 550,\r\n        boxShadow: theme.boxShadow.notification,\r\n        position: \"relative\"\r\n    },\r\n    icon: {\r\n        ...getIconStyle(props.type, theme),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    message: {\r\n        paddingLeft: 10,\r\n        fontSize: theme.text.size.notification_message\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: 10,\r\n        \"&:hover\": {\r\n            cursor: \"pointer\"\r\n        }\r\n    }\r\n});\r\n\r\nfunction getIcon(type) {\r\n    switch (type) {\r\n        case \"primary\":\r\n            return <AgreeIcon />;\r\n        case \"success\":\r\n            return <AgreeIcon />;\r\n        case \"info\":\r\n            return <InfoIcon/>;\r\n        case \"warning\":\r\n            return <WarningIcon/>;\r\n        case \"danger\":\r\n            return <WarningIcon/>;\r\n        default:\r\n            return <AgreeIcon />\r\n    }\r\n}\r\n\r\nfunction Notification({type = \"primary\", message, handleClose, classes}) {\r\n    const Icon = getIcon(type);\r\n\r\n    return <Grid container alignItems={\"center\"} className={classes.root}>\r\n        <Grid item className={classes.icon}>\r\n            {Icon}\r\n        </Grid>\r\n        <Grid item className={classes.message}>\r\n            {message}\r\n        </Grid>\r\n        <Grid className={classes.closeButton}>\r\n            <CloseIcon onClick={handleClose} />\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\nNotification.propTypes = {\r\n    type: PropTypes.string,\r\n    message: PropTypes.string,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\nexport default withPropsStyles(styles)(Notification);\r\n","import React from \"react\";\r\nimport withPropsStyles from \"../with-props-styles\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PropTypes from \"prop-types\";\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nfunction getChipStyle(type, theme) {\r\n    switch (type) {\r\n        case \"active\":\r\n            return {\r\n                color: theme.colors.white,\r\n                background: theme.palette.primary.main\r\n            };\r\n        default:\r\n            return {\r\n                color: theme.colors.black\r\n            }\r\n    }\r\n}\r\n\r\nconst styles = (props, theme) => ({\r\n    root: {\r\n        background: theme.palette.background.paper,\r\n        boxShadow: theme.boxShadow.tag,\r\n        borderRadius: 4,\r\n        ...getChipStyle(props.type, theme),\r\n        \"& svg\": {\r\n            fontSize: 15,\r\n            color: props.type === \"active\"\r\n                ? theme.colors.white\r\n                : theme.colors.black\r\n        }\r\n    }\r\n});\r\n\r\nfunction Tag({label = \"Label\", type = \"normal\", handleDelete, classes}) {\r\n    return <Chip\r\n        label={label}\r\n        onDelete={handleDelete}\r\n        className={classes.root}\r\n        deleteIcon={<CloseIcon/>}\r\n    />\r\n}\r\n\r\nTag.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    handleDelete: PropTypes.func,\r\n    type: PropTypes.string,\r\n    label: PropTypes.string\r\n};\r\n\r\nexport default withPropsStyles(styles)(Tag);\r\n","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withPropsStyles from \"../with-props-styles\";\r\nimport PropTypes from \"prop-types\"\r\nimport QWButton from \"../button\"\r\n\r\nconst styles = (props, theme) =>({\r\n    root: {\r\n        maxHeight: 42,\r\n        minHeight: 42,\r\n        maxWidth: 550,\r\n        cursor: \"pointer\"\r\n    },\r\n    input: {\r\n        background: \"#f5f6fa\",\r\n        color: theme.text.color.upload_zone,\r\n        flex: 1,\r\n        minHeight: 42,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        marginRight: 10,\r\n        borderRadius: 2\r\n    },\r\n    browse:{\r\n\r\n    }\r\n});\r\n\r\nfunction UploadZone({handleAcceptedFile, classes}) {\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        handleAcceptedFile(acceptedFiles)\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        onDrop,\r\n        accept: 'image/jpeg, image/png'\r\n    });\r\n\r\n    return (\r\n        <Grid container className={classes.root} {...getRootProps()} alignItems={\"center\"}>\r\n            <input {...getInputProps()} />\r\n            <Grid item className={classes.input}>\r\n                Choose a File\r\n            </Grid>\r\n            <Grid item className={classes.browse}>\r\n                <QWButton\r\n                    color={\"primary\"}\r\n                    variant={\"contained\"}\r\n                    size={\"small\"}\r\n                >\r\n                    Browse\r\n                </QWButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nUploadZone.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withPropsStyles(styles)(UploadZone)\r\n","import React, {useState} from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from \"@material-ui/core/Grid\";\nimport {createTheme} from \"./create-theme\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {QWButton,\n    ModalConfirm,\n    ModalResponse,\n    Notification,\n    Tag,\n    UploadZone\n} from \"./ui-components\";\n\nfunction App({actions, selectedTheme}) {\n    /**\n     * Confirm Modal State\n     */\n    const [openModalConfirm, setOpenModalConfirm] = useState(false);\n    const openModalConfirmHandler = () => setOpenModalConfirm(true);\n    const closeModalConfirmHandler = () => setOpenModalConfirm(false);\n\n    /**\n     * Response Error Modal State\n     */\n    const [openModalErrorResponse, setOpenModalErrorResponse] = useState(false);\n    const openModalErrorResponseHandler = () => {\n        setResponseType(\"error\");\n        setOpenModalErrorResponse(true);\n    };\n    const closeModalErrorResponseHandler = () => {\n        setResponseType(\"\");\n        setOpenModalErrorResponse(false);\n    };\n\n    /**\n     * Response Success Modal State\n     */\n    const [openModalSuccessResponse, setOpenModalSuccessResponse] = useState(false);\n    const [responseType, setResponseType] = useState(\"\");\n    const openModalSuccessResponseHandler = () => {\n        setResponseType(\"success\");\n        setOpenModalSuccessResponse(true);\n    };\n    const closeModalSuccessResponseHandler = () => {\n        setResponseType(\"\");\n        setOpenModalSuccessResponse(false);\n    };\n\n\n    const theme = createTheme(selectedTheme);\n\n\n    return (\n        <Grid container className=\"App\">\n            <MuiThemeProvider theme={theme}>\n                <Grid container spacing={16} direction={\"column\"}>\n                    <Grid item container spacing={8}>\n                        <Grid item>\n                            <Button style={{background: green[500], color: \"white\"}}\n                                    onClick={() => actions.changeTheme({type: \"green\"})}>Change GREEN</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button style={{background: purple[500], color: \"white\"}}\n                                    onClick={() => actions.changeTheme({type: \"purple\"})}>Change PURPLE</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button style={{background: orange[500], color: \"white\"}}\n                                    onClick={() => actions.changeTheme({type: \"orange\"})}>Change ORANGE</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button style={{background: blue[500], color: \"white\"}}\n                                    onClick={() => actions.changeTheme({type: \"blue\"})}>Change BLUE</Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <h2>Button</h2>\n                        <Grid container spacing={16} alignItems={\"center\"}>\n                            <Grid item>\n                                <QWButton variant={\"outlined\"} color=\"primary\">\n                                    Outlined\n                                </QWButton>\n                            </Grid>\n                            <Grid item>\n                                <QWButton disabled color={\"primary\"} variant={\"outlined\"}>\n                                    Outlined Disabled\n                                </QWButton>\n                            </Grid>\n                            <Grid item>\n                                <QWButton disabled color={\"primary\"} variant={\"contained\"}>\n                                    Contained\n                                </QWButton>\n                            </Grid>\n                            <Grid item>\n                                <QWButton variant={\"contained\"} color=\"primary\">\n                                    Contained Disabled\n                                </QWButton>\n                            </Grid>\n                            <Grid item>\n                                <QWButton color={\"primary\"} variant={\"contained\"}>\n                                    <AddIcon/>\n                                    Submit\n                                </QWButton>\n                            </Grid>\n                            <Grid item>\n                                <QWButton size={\"small\"} color={\"primary\"} variant={\"contained\"}>\n                                    Small\n                                </QWButton>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <h2>Modal</h2>\n                        <Grid item>\n                            <h4>Confirm</h4>\n                            <QWButton onClick={openModalConfirmHandler} color={\"primary\"} variant={\"outlined\"}>Trigger\n                                Confirm Modal</QWButton>\n                        </Grid>\n                        <Grid item>\n                            <h4>Response</h4>\n                            <Grid container spacing={8}>\n                                <Grid item>\n                                    <QWButton\n                                        onClick={openModalErrorResponseHandler}\n                                        variant={\"outlined\"}\n                                        style={{\n                                            color: selectedTheme.colors.orange,\n                                            borderColor: selectedTheme.colors.orange\n                                        }}\n                                    >\n                                        Trigger Error Response Modal\n                                    </QWButton>\n                                </Grid>\n                                <Grid item>\n                                    <QWButton\n                                        onClick={openModalSuccessResponseHandler}\n                                        variant={\"outlined\"}\n                                        color={\"primary\"}\n                                    >Trigger\n                                        Success Response Modal</QWButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item>\n                        <h2>Notifications</h2>\n                        <Grid item>\n                            <h4>Primary</h4>\n                            <Notification\n                                type={\"primary\"}\n                                message={\"Lorem Ipsum has been the industry's standard dummy text\"}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <h4>Success</h4>\n                            <Notification\n                                type={\"success\"}\n                                message={\"Lorem Ipsum has been the industry's standard dummy text\"}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <h4>Info</h4>\n                            <Notification\n                                type={\"info\"}\n                                message={\"Lorem Ipsum has been the industry's standard dummy text\"}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <h4>Warning</h4>\n                            <Notification\n                                type={\"warning\"}\n                                message={\"Lorem Ipsum has been the industry's standard dummy text\"}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <h4>Danger</h4>\n                            <Notification\n                                type={\"danger\"}\n                                message={\"Lorem Ipsum has been the industry's standard dummy text\"}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item>\n                        <h2>Tags</h2>\n                        <Grid item spacing={16} container>\n                            <Grid item>\n                                <Tag\n                                    label={\"Normal Tag\"}\n                                    handleDelete={()=>{console.log('delete')}}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Tag\n                                    type={\"active\"}\n                                    label={\"Active Tag\"}\n                                    handleDelete={()=>{console.log('delete')}}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Tag\n                                    label={\"Other Tag\"}\n                                    handleDelete={()=>{console.log('delete')}}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item>\n                        <h2>Upload Zone</h2>\n                        <UploadZone\n                            handleAcceptedFile={(acceptedFiles)=> console.log(acceptedFiles)}\n                        />\n                    </Grid>\n\n                    <ModalConfirm\n                        open={openModalConfirm}\n                        handleClose={closeModalConfirmHandler}\n                        title={\"Activation Successfully\"}\n                    />\n                    <ModalResponse\n                        message={\"Opps! Looks like something is wrong\"}\n                        type={\"error\"}\n                        open={openModalErrorResponse}\n                        handleClose={closeModalErrorResponseHandler}\n                    />\n                    <ModalResponse\n                        message={\"It's Done!\"}\n                        type={\"success\"}\n                        open={openModalSuccessResponse}\n                        handleClose={closeModalSuccessResponseHandler}\n                    />\n                </Grid>\n            </MuiThemeProvider>\n        </Grid>\n    );\n}\n\nexport default App;\n","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../redux/utils/theme/actions\";\r\nimport App from \"../App\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedTheme: state.theme.selectedTheme\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        actions: bindActionCreators({\r\n            changeTheme: actions.changeTheme\r\n        }, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultStyleOptions = {\r\n    shape: {\r\n        borderRadius: 2,\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: \"normal\"\r\n        },\r\n        useNextVariants: true,\r\n        fontFamily: \"helvetica-light, Roboto, Arial, sans-serif\",\r\n        display1:{\r\n            fontSize: 82,\r\n            fontWeight: \"bold\",\r\n            color: \"#444444\",\r\n            lineHeight: \"normal\"\r\n        },\r\n        display2:{\r\n            fontSize: 50,\r\n            fontWeight: \"bold\",\r\n            color: \"#444444\",\r\n            lineHeight: \"normal\"\r\n        },\r\n        display3:{\r\n            fontSize: 34,\r\n            fontWeight: \"bold\",\r\n            color: \"#444444\",\r\n            lineHeight: \"normal\"\r\n        },\r\n        display4:{\r\n            fontSize: 18,\r\n            fontWeight: \"bold\",\r\n            color: \"#444444\",\r\n            lineHeight: \"normal\"\r\n        }\r\n    },\r\n    colors: {\r\n        dark_purple: \"#682165\",\r\n        orange: \"#ffaa15\",\r\n        green: \"#00c781\",\r\n        black: \"#686868\",\r\n        white: \"#ffffff\",\r\n        red: \"#eb6969\",\r\n        grey: \"#757575\",\r\n        dark_blue: \"#5d38db\",\r\n        blue: \"#48dbfb\"\r\n    },\r\n    text: {\r\n        size: {\r\n            button_medium: 15,\r\n            button_small: 14,\r\n\r\n            modal_title: 22,\r\n            modal_body: 16,\r\n\r\n            notification_message: 14,\r\n\r\n            upload_zone: 14,\r\n\r\n\r\n            login_input: 22,\r\n            login_label: 13,\r\n\r\n            navigation_active: 22,\r\n\r\n            store_detail_header: 17,\r\n            store_detail_sub_header: 15,\r\n            store_detail_body: 15,\r\n\r\n            information_body_highlight: 14,\r\n            information_header: 14,\r\n            information_body: 14\r\n\r\n        },\r\n        color: {\r\n            modal_body: \"#666666\",\r\n            navigation_active: \"#fff\",\r\n            information_body_highlight: \"#672165\",\r\n            information_header: \"#808184\",\r\n            information_body: \"#808184\",\r\n\r\n            upload_zone: \"#a1adcd\"\r\n        },\r\n        letterSpacing: {\r\n\r\n        },\r\n        font: {\r\n            bold: {\r\n                fontFamily: \"helvetica-bold\"\r\n            },\r\n        }\r\n    },\r\n    margin: {\r\n\r\n    },\r\n    boxShadow: {\r\n        table_item_hover: \"0 13px 23px -5px rgba(157, 142, 230, 0.34)\",\r\n        notification: \"0 2px 4px 0 rgba(0, 0, 0, 0.1)\",\r\n        tag: \"0 5px 16px 0 rgba(226, 230, 245, 0.8)\"\r\n    },\r\n    gradient: {\r\n\r\n    },\r\n    padding: {\r\n        modal_control: \"36px !important\"\r\n    }\r\n};\r\n\r\nfunction combinedStyle(style) {\r\n    return Object.assign({...defaultStyleOptions}, {...style})\r\n}\r\n\r\nexport const themes = {\r\n    purple: combinedStyle({\r\n        palette: {\r\n            primary: {\r\n                main: \"#861388\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            secondary: {\r\n                main: \"#9c27b0\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            third: {\r\n                main: \"#8954ba\",\r\n                contrastText: \"#fff\"\r\n            }\r\n        }\r\n    }),\r\n    green: combinedStyle({\r\n        palette: {\r\n            primary: {\r\n                main: \"#43A047\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            secondary: {\r\n                main: \"#9CCC65\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            third: {\r\n                main: \"#d4e157\",\r\n                contrastText: \"#fff\"\r\n            }\r\n        }\r\n    }),\r\n    orange: combinedStyle({\r\n        palette: {\r\n            primary: {\r\n                main: \"#F57C00\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            secondary: {\r\n                main: \"#FFA726\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            third: {\r\n                main: \"#ff8a65\",\r\n                contrastText: \"#fff\"\r\n            }\r\n        }\r\n    }),\r\n    blue: combinedStyle({\r\n        palette: {\r\n            primary: {\r\n                main: \"#2196f3\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            secondary: {\r\n                main: \"#4fc3f7\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            third: {\r\n                main: \"#80deea\",\r\n                contrastText: \"#fff\"\r\n            }\r\n        }\r\n    })\r\n};\r\n","import * as types from \"./types\";\r\nimport {themes} from \"../../../themes\";\r\n\r\nconst initState = {\r\n    themes,\r\n    selectedTheme: themes[\"purple\"]\r\n}\r\n\r\nexport default function (\r\n    state = initState, action) {\r\n    switch (action.type) {\r\n        case types.CHANGE_THEME: {\r\n            const {type} = action.payload;\r\n            const {themes} = state;\r\n            return {...state, selectedTheme: themes[type]}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import reducer from \"./reducers\";\r\nimport * as types from \"./types\";\r\nimport * as actions from \"./actions\";\r\nimport { sagas } from \"./sagas\";\r\n\r\nexport {\r\n    types,\r\n    actions,\r\n    sagas\r\n}\r\n\r\nexport default reducer;","import { fork, all } from \"redux-saga/effects\";\r\nimport {sagas as theme} from \"./utils/theme\";\r\n\r\nconst allSagas = [\r\n\t...theme,\r\n];\r\n\r\n// start all sagas in parallel\r\nexport default function* rootSaga() {\r\n\tyield all(allSagas.map((saga) => fork(saga)));\r\n}\r\n","import {put, takeEvery, all, call} from \"redux-saga/effects\";\r\nimport * as actions from \"./actions\";\r\nimport * as types from \"./types\";\r\n\r\nexport const sagas = [\r\n    \r\n];","import { combineReducers } from \"redux\";\r\n\r\nimport theme from \"./utils/theme\";\r\n\r\n\r\nexport default combineReducers({\r\n    theme\r\n});\r\n","import createSagaMiddleware from \"redux-saga\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport rootSaga from \"./root-saga\";\r\nimport reducer from \"./root-reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n\treducer,\r\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/app';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/configure-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}